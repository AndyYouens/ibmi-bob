#!/QOpenSys/usr/bin/sh

### Deletes logical files associated with a physical file, but only
### in the specified library (to be safe).
### 
### Written by Jeff Berman, 2016-07-15

print_help() {
	echo "dltpfdeps -- delete physical file dependencies\n"
	echo "Deletes all logical files attached to a given physical file.  Only logical files in the specified library will be deleted.\n"
	echo "usage: dltpfdeps [-p] file library\n"
	echo "EXAMPLES"
	echo "Delete all logical files in library MYLIB that are attached to physical file MYPF.\n"
	echo "\tdltpfdeps MYPF MYLIB\n"
	echo "\tdltpfdeps -p MYPF MYLIB"
	echo "Delete all logical files in library MYLIB that are attached to physical file MYPF, and also delete the physical file.\n"
	
	
	exit 0
}

### Print a string in upper case
print_upper() {
	local string=$(echo "$1" | tr '[a-z]' '[A-Z]')
	echo $string
}

### Print the name of this script
script_name() {
	echo "${0##*/}"
}
	
dltPF=false

### Process options
while getopts :p opt; do
	case "$opt" in
	p)	dltPF=true
		;;
	\?)	print_help
		exit 1
		;;
	esac
done

### Require two arguments
shift $OPTIND-1
if [ $# -ne 2 ]; then
	print_help
	exit 1
fi

PF=$1
lib=$2
path=/qsys.lib/$lib.lib
error=0

### First check if PF even exists; if not, we're all done.
if [ ! -d $path/$PF.FILE ]; then
	exit 0
fi

### Parse output of DSPDBR command and extract out logical file names.
#files=$(system "dspdbr ${lib}/${PF}" | sed -n '/Dependent File/,$p' | tail -n +2 | awk '$2 ~ /$lib/ { print $1 }')
files=$(system "dspdbr ${lib}/${PF}" | sed -n '/Dependent File/,$p' | tail -n +2 | awk -v lib="$lib" '$2 == lib { print $1 }')

### Loop through list of LFs and try to delete each one.
for f in $files; do
	rm -R $path/$f.FILE
	printf "*** $(script_name): Logical file [$(print_upper $f)] for physical file $(print_upper $PF) "
	if [ -d $f.FILE ]; then
		printf "NOT "
	fi
	echo "deleted."
done

### Try to delete PF.  This may fail if LFs located in other libraries are attached to it.
if [[ $dltPF = true && -d $path/$PF.FILE ]]; then
	rm -R $path/$PF.FILE
	if [ $? -eq 0 ]; then
		echo "*** $(script_name): Physical file [$(print_upper $PF)] deleted."
	else
		echo "*** $(script_name): Physical file [$(print_upper $PF)] NOT deleted."
		error=1
	fi
fi

exit $error