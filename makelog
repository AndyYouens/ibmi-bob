#!/bin/sh
#
# Copyright 2017 S4i Systems, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Wrapper around `make` command so its output can be captured and logged into
# a log directory.  The directory name is gleaned by scraping the output of IBMiMake.
#
# A named pipe is created, and a reader process (`tee`) is started in the background.  Make's
# output is redirected to the pipe, where the reader writes it to both stdout and a log file.
# The complexity is needed because merely using `tee` loses Make's exit code.  An alternate
# solution, redirecting Make's output to a file and later sending it to stdout, preserves the
# exit code but then nothing would be displayed until Make had ended.
#

# Create a named pipe that stdout and stderr will be funneled through, and start a tee reader process.
pid=$$
pipe="/tmp/pipe$pid"
log="/tmp/makelog${pid}.log"
mkfifo "$pipe"
tee "$log" < "$pipe" &

# Call make with the arguments that were passed in, redirect stdout and stderr to the pipe.
make $@ > "$pipe" 2>&1
exit=$?

# Determine the logging directory used by Make and move the logfile there.
# The directory is written to stdout by the IBMiMake makefile.
finalLog='! Build log.log'
makeLogDir=$(sed -n -e 's/^IBMiMake log directory: \(.*\)$/\1/p' "$log")
if [ -d "$makeLogDir" ] && [ -f "$log" ]; then
    echo "Make: Invoked with command > make $@ <" > "${makeLogDir}/${finalLog}"
    echo >> "${makeLogDir}/${finalLog}"
    sed -e '/^IBMiMake log directory:.*\/Logs\//d' "$log" >> "${makeLogDir}/${finalLog}"
fi

rm "$pipe"
exit $exit
