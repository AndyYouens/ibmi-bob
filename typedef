#!/QOpenSys/usr/bin/sh
#
# Copyright 2017 S4i Systems, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Generates a C-style typedef for a given externally-described file
# 
# Written by Jeff Berman, 2016-10-04
#

print_help() {
   (echo "typedef -- generate typedef for externally-described files"
    echo
    echo "Generates typedefs for an externally-described file to stdout.  This is a wrapper around GENCSRC, and converts its output to ASCII with Unix-style line endings."
    echo
    echo "Usage: typedef [-d] file library"
    echo
	echo "  -d  Debug mode. Enables extra logging."
    echo
    echo "EXAMPLES"
    echo "  Generate typedef for file MYLIB/MYFILE."
    echo "      typedef MYFILE MYLIB"
    echo
    echo "  Generate typedef for file MYLIB/MYFILE, and write it to an IFS source file."
    echo "      typedef MYFILE MYLIB > /Source/headers/MYFILE.PF.H") | fold -s
        
    exit 0
} >&2

# Print a string in upper case
print_upper() {
    local string=$(echo "$1" | tr '[:lower:]' '[:upper:]')
    echo $string
}

# Print the name of this script
script_name() {
    echo "${0##*/}"
}
    
debug=false

# Process options
while getopts :d opt; do
    case "$opt" in
    d)  debug=true
        ;;
    \?) print_help
        exit 1
        ;;
    esac
done

# Require two arguments
shift "$(($OPTIND-1))"

if [ $# -ne 2 ]; then
    print_help
    exit 1
fi

file=$(print_upper $1)
lib=$(print_upper $2)

if [[ "$lib" == "QSYS" ]]; then
    path="/QSYS.LIB"
else
    path=/QSYS.LIB/${lib}.LIB
fi

# First check if file even exists; if not, we're all done.
if [ ! -e $path/${file}.FILE ]; then
    echo "typedef: File $path/${file}.FILE doesn't exist; exiting." >&2
    exit 0
fi

# Determine the type of file
suffix=$(system "dspobjd ${lib}/${file} *file" | tail -n2 | head -n1 | awk '{print $3}')

# Generate the typedef
if [ "$suffix" = 'PRTF' ]; then
    SLTFLD='*OUTPUT'
else
    SLTFLD='*BOTH *KEY'
fi

tempfile=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 10)

if [ "$debug" == "true" ]; then
    echo "typedef: file =     $file"
    echo "typedef: lib =      $lib"
    echo "typedef: suffix =   $suffix"
    echo "typedef: SLTFLD =   $SLTFLD"
    echo "typedef: tempfile = /tmp/$tempfile"
    echo
fi >&2

system -v "GENCSRC OBJ('$path/${file}.FILE') SRCSTMF('/tmp/${tempfile}') SLTFLD($SLTFLD) TYPEDEFPFX('$file')" > /dev/null

if [ $? -ne 0 ]; then
    echo "typefef: Error occurred calling GENCSRC." >&2
    exit 1
fi

# The `sed` statement below converts 'int' to 'long int', as the SQL precompiler needs the type explicitly stated.
echo "#ifndef ${file}_${suffix}_H"; echo "   #define ${file}_${suffix}_H"; /QOpenSys/usr/bin/iconv -f IBM-037 -t ISO8859-1 /tmp/${tempfile} | tr -d '\r' | sed -e '/^ *int/ s/;     /;/' -e '/^ *int/ s/int/long int/'; echo "#endif  /* ${file}_${suffix}_H */"

rm /tmp/${tempfile} 2>/dev/null

exit 0